Analyzing file $DIR/fields.rs using DefinitelyInitializedAnalysis...
Result for function main():
{
  "bb0": [
    [
      [
        "state:",
        [],
        "statement: StorageLive(_1)"
      ]
    ],
    "state before terminator:",
    [],
    "terminator: _1 = <T as std::default::Default>::default() -> [return: bb1, unwind: bb14]",
    {
      "bb1": [
        "state:",
        [
          "_1"
        ]
      ],
      "bb14": [
        "state:",
        []
      ]
    }
  ],
  "bb1": [
    [
      [
        "state:",
        [
          "_1"
        ],
        "statement: FakeRead(ForLet(None), _1)"
      ],
      [
        "state:",
        [
          "_1"
        ],
        "statement: StorageLive(_2)"
      ],
      [
        "state:",
        [
          "_1"
        ],
        "statement: StorageLive(_3)"
      ],
      [
        "state:",
        [
          "_1"
        ],
        "statement: _3 = move (_1.0: std::boxed::Box<u32>)"
      ]
    ],
    "state before terminator:",
    [
      "(_1.1: std::boxed::Box<u32>)",
      "(_1.2: std::boxed::Box<u32>)",
      "_3"
    ],
    "terminator: _2 = std::mem::drop::<std::boxed::Box<u32>>(move _3) -> [return: bb2, unwind: bb12]",
    {
      "bb12": [
        "state:",
        []
      ],
      "bb2": [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_2"
        ]
      ]
    }
  ],
  "bb2": [
    [
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_2"
        ],
        "statement: StorageDead(_3)"
      ],
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_2"
        ],
        "statement: StorageDead(_2)"
      ],
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)"
        ],
        "statement: StorageLive(_4)"
      ],
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)"
        ],
        "statement: _4 = &mut (_1.1: std::boxed::Box<u32>)"
      ],
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4"
        ],
        "statement: FakeRead(ForLet(None), _4)"
      ],
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4"
        ],
        "statement: StorageLive(_5)"
      ],
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4"
        ],
        "statement: _5 = &_4"
      ],
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5"
        ],
        "statement: FakeRead(ForLet(None), _5)"
      ],
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5"
        ],
        "statement: StorageLive(_6)"
      ],
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5"
        ],
        "statement: _6 = &(_1.2: std::boxed::Box<u32>)"
      ],
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5",
          "_6"
        ],
        "statement: FakeRead(ForLet(None), _6)"
      ],
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5",
          "_6"
        ],
        "statement: StorageLive(_7)"
      ],
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5",
          "_6"
        ],
        "statement: StorageLive(_8)"
      ],
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5",
          "_6"
        ],
        "statement: _8 = _6"
      ]
    ],
    "state before terminator:",
    [
      "(_1.1: std::boxed::Box<u32>)",
      "(_1.2: std::boxed::Box<u32>)",
      "_4",
      "_5",
      "_6",
      "_8"
    ],
    "terminator: _7 = std::mem::drop::<&std::boxed::Box<u32>>(move _8) -> [return: bb3, unwind: bb13]",
    {
      "bb13": [
        "state:",
        []
      ],
      "bb3": [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5",
          "_6",
          "_7"
        ]
      ]
    }
  ],
  "bb3": [
    [
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5",
          "_6",
          "_7"
        ],
        "statement: StorageDead(_8)"
      ],
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5",
          "_6",
          "_7"
        ],
        "statement: StorageDead(_7)"
      ],
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5",
          "_6"
        ],
        "statement: StorageLive(_9)"
      ],
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5",
          "_6"
        ],
        "statement: StorageLive(_10)"
      ],
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5",
          "_6"
        ],
        "statement: _10 = _5"
      ]
    ],
    "state before terminator:",
    [
      "(_1.1: std::boxed::Box<u32>)",
      "(_1.2: std::boxed::Box<u32>)",
      "_4",
      "_5",
      "_6",
      "_10"
    ],
    "terminator: _9 = std::mem::drop::<&&mut std::boxed::Box<u32>>(move _10) -> [return: bb4, unwind: bb13]",
    {
      "bb13": [
        "state:",
        []
      ],
      "bb4": [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5",
          "_6",
          "_9"
        ]
      ]
    }
  ],
  "bb4": [
    [
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5",
          "_6",
          "_9"
        ],
        "statement: StorageDead(_10)"
      ],
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5",
          "_6",
          "_9"
        ],
        "statement: StorageDead(_9)"
      ],
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5",
          "_6"
        ],
        "statement: StorageLive(_11)"
      ]
    ],
    "state before terminator:",
    [
      "(_1.1: std::boxed::Box<u32>)",
      "(_1.2: std::boxed::Box<u32>)",
      "_4",
      "_5",
      "_6"
    ],
    "terminator: _11 = std::boxed::Box::<u32>::new(const 123_u32) -> [return: bb5, unwind: bb13]",
    {
      "bb13": [
        "state:",
        []
      ],
      "bb5": [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5",
          "_6",
          "_11"
        ]
      ]
    }
  ],
  "bb5": [
    [],
    "state before terminator:",
    [
      "(_1.1: std::boxed::Box<u32>)",
      "(_1.2: std::boxed::Box<u32>)",
      "_4",
      "_5",
      "_6",
      "_11"
    ],
    "terminator: drop((_1.0: std::boxed::Box<u32>)) -> [return: bb6, unwind: bb7]",
    {
      "bb6": [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5",
          "_6",
          "_11"
        ]
      ],
      "bb7": [
        "state:",
        []
      ]
    }
  ],
  "bb6": [
    [
      [
        "state:",
        [
          "(_1.1: std::boxed::Box<u32>)",
          "(_1.2: std::boxed::Box<u32>)",
          "_4",
          "_5",
          "_6",
          "_11"
        ],
        "statement: (_1.0: std::boxed::Box<u32>) = move _11"
      ]
    ],
    "state before terminator:",
    [
      "_1",
      "_4",
      "_5",
      "_6"
    ],
    "terminator: drop(_11) -> [return: bb8, unwind: bb13]",
    {
      "bb13": [
        "state:",
        []
      ],
      "bb8": [
        "state:",
        [
          "_1",
          "_4",
          "_5",
          "_6"
        ]
      ]
    }
  ],
  "bb7": [
    [
      [
        "state:",
        [],
        "statement: (_1.0: std::boxed::Box<u32>) = move _11"
      ]
    ],
    "state before terminator:",
    [
      "(_1.0: std::boxed::Box<u32>)"
    ],
    "terminator: drop(_11) -> bb13",
    {
      "bb13": [
        "state:",
        [
          "(_1.0: std::boxed::Box<u32>)"
        ]
      ]
    }
  ],
  "bb8": [
    [
      [
        "state:",
        [
          "_1",
          "_4",
          "_5",
          "_6"
        ],
        "statement: StorageDead(_11)"
      ],
      [
        "state:",
        [
          "_1",
          "_4",
          "_5",
          "_6"
        ],
        "statement: StorageLive(_12)"
      ],
      [
        "state:",
        [
          "_1",
          "_4",
          "_5",
          "_6"
        ],
        "statement: StorageLive(_13)"
      ],
      [
        "state:",
        [
          "_1",
          "_4",
          "_5",
          "_6"
        ],
        "statement: _13 = move _1"
      ]
    ],
    "state before terminator:",
    [
      "_4",
      "_5",
      "_6",
      "_13"
    ],
    "terminator: _12 = std::mem::drop::<T>(move _13) -> [return: bb9, unwind: bb11]",
    {
      "bb11": [
        "state:",
        []
      ],
      "bb9": [
        "state:",
        [
          "_4",
          "_5",
          "_6",
          "_12"
        ]
      ]
    }
  ],
  "bb9": [
    [
      [
        "state:",
        [
          "_4",
          "_5",
          "_6",
          "_12"
        ],
        "statement: StorageDead(_13)"
      ],
      [
        "state:",
        [
          "_4",
          "_5",
          "_6",
          "_12"
        ],
        "statement: StorageDead(_12)"
      ],
      [
        "state:",
        [
          "_4",
          "_5",
          "_6"
        ],
        "statement: _0 = const ()"
      ],
      [
        "state:",
        [
          "_0",
          "_4",
          "_5",
          "_6"
        ],
        "statement: StorageDead(_6)"
      ],
      [
        "state:",
        [
          "_0",
          "_4",
          "_5"
        ],
        "statement: StorageDead(_5)"
      ],
      [
        "state:",
        [
          "_0",
          "_4"
        ],
        "statement: StorageDead(_4)"
      ]
    ],
    "state before terminator:",
    [
      "_0"
    ],
    "terminator: drop(_1) -> [return: bb10, unwind: bb14]",
    {
      "bb10": [
        "state:",
        [
          "_0"
        ]
      ],
      "bb14": [
        "state:",
        []
      ]
    }
  ],
  "bb10": [
    [
      [
        "state:",
        [
          "_0"
        ],
        "statement: StorageDead(_1)"
      ]
    ],
    "state before terminator:",
    [
      "_0"
    ],
    "terminator: return",
    {}
  ],
  "bb11": [
    [],
    "state before terminator:",
    [],
    "terminator: drop(_13) -> bb13",
    {
      "bb13": [
        "state:",
        []
      ]
    }
  ],
  "bb12": [
    [],
    "state before terminator:",
    [],
    "terminator: drop(_3) -> bb13",
    {
      "bb13": [
        "state:",
        []
      ]
    }
  ],
  "bb13": [
    [],
    "state before terminator:",
    [],
    "terminator: drop(_1) -> bb14",
    {
      "bb14": [
        "state:",
        []
      ]
    }
  ],
  "bb14": [
    [],
    "state before terminator:",
    [],
    "terminator: resume",
    {}
  ]
}
