Analyzing file $DIR/repeated_assignment.rs using DefinitelyInitializedAnalysis...
Result for function main():
{
  "bb0": [
    [
      [
        "state:",
        [],
        "statement: StorageLive(_1)"
      ],
      [
        "state:",
        [],
        "statement: _1 = const 1_i32"
      ],
      [
        "state:",
        [
          "_1"
        ],
        "statement: FakeRead(ForLet(None), _1)"
      ],
      [
        "state:",
        [
          "_1"
        ],
        "statement: StorageLive(_2)"
      ],
      [
        "state:",
        [
          "_1"
        ],
        "statement: _2 = const 3_i32"
      ],
      [
        "state:",
        [
          "_1",
          "_2"
        ],
        "statement: FakeRead(ForLet(None), _2)"
      ],
      [
        "state:",
        [
          "_1",
          "_2"
        ],
        "statement: StorageLive(_3)"
      ]
    ],
    "state before terminator:",
    [
      "_1",
      "_2"
    ],
    "terminator: _3 = input() -> [return: bb1, unwind: bb5]",
    {
      "bb1": [
        "state:",
        [
          "_1",
          "_2",
          "_3"
        ]
      ],
      "bb5": [
        "state:",
        []
      ]
    }
  ],
  "bb1": [
    [
      [
        "state:",
        [
          "_1",
          "_2",
          "_3"
        ],
        "statement: _1 = move _3"
      ],
      [
        "state:",
        [
          "_1",
          "_2"
        ],
        "statement: StorageDead(_3)"
      ],
      [
        "state:",
        [
          "_1",
          "_2"
        ],
        "statement: StorageLive(_4)"
      ],
      [
        "state:",
        [
          "_1",
          "_2"
        ],
        "statement: StorageLive(_5)"
      ],
      [
        "state:",
        [
          "_1",
          "_2"
        ],
        "statement: StorageLive(_6)"
      ],
      [
        "state:",
        [
          "_1",
          "_2"
        ],
        "statement: _6 = _1"
      ],
      [
        "state:",
        [
          "_1",
          "_2",
          "_6"
        ],
        "statement: _5 = Gt(move _6, const 2_i32)"
      ],
      [
        "state:",
        [
          "_1",
          "_2",
          "_5"
        ],
        "statement: StorageDead(_6)"
      ]
    ],
    "state before terminator:",
    [
      "_1",
      "_2",
      "_5"
    ],
    "terminator: switchInt(move _5) -> [0: bb3, otherwise: bb2]",
    {
      "bb2": [
        "state:",
        [
          "_1",
          "_2"
        ]
      ],
      "bb3": [
        "state:",
        [
          "_1",
          "_2"
        ]
      ]
    }
  ],
  "bb2": [
    [
      [
        "state:",
        [
          "_1",
          "_2"
        ],
        "statement: _2 = const 5_i32"
      ],
      [
        "state:",
        [
          "_1",
          "_2"
        ],
        "statement: _4 = const ()"
      ]
    ],
    "state before terminator:",
    [
      "_1",
      "_2",
      "_4"
    ],
    "terminator: goto -> bb4",
    {
      "bb4": [
        "state:",
        [
          "_1",
          "_2",
          "_4"
        ]
      ]
    }
  ],
  "bb3": [
    [
      [
        "state:",
        [
          "_1",
          "_2"
        ],
        "statement: _2 = const 7_i32"
      ],
      [
        "state:",
        [
          "_1",
          "_2"
        ],
        "statement: _4 = const ()"
      ]
    ],
    "state before terminator:",
    [
      "_1",
      "_2",
      "_4"
    ],
    "terminator: goto -> bb4",
    {
      "bb4": [
        "state:",
        [
          "_1",
          "_2",
          "_4"
        ]
      ]
    }
  ],
  "bb4": [
    [
      [
        "state:",
        [
          "_1",
          "_2",
          "_4"
        ],
        "statement: StorageDead(_5)"
      ],
      [
        "state:",
        [
          "_1",
          "_2",
          "_4"
        ],
        "statement: StorageDead(_4)"
      ],
      [
        "state:",
        [
          "_1",
          "_2"
        ],
        "statement: _2 = const 25_i32"
      ],
      [
        "state:",
        [
          "_1",
          "_2"
        ],
        "statement: _0 = const ()"
      ],
      [
        "state:",
        [
          "_0",
          "_1",
          "_2"
        ],
        "statement: StorageDead(_2)"
      ],
      [
        "state:",
        [
          "_0",
          "_1"
        ],
        "statement: StorageDead(_1)"
      ]
    ],
    "state before terminator:",
    [
      "_0"
    ],
    "terminator: return",
    {}
  ],
  "bb5": [
    [],
    "state before terminator:",
    [],
    "terminator: resume",
    {}
  ]
}
