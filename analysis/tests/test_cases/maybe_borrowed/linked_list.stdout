Analyzing file $DIR/linked_list.rs using MaybeBorrowedAnalysis...
Result for function borrow_fields():
{
  "bb0": [
    [
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageLive(_2)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: _2 = &mut (_1.0: u32)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "(_1.0: u32)"
          ]
        },
        "statement: FakeRead(ForLet(None), _2)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageLive(_3)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: _3 = &(_1.1: std::option::Option<std::boxed::Box<Node>>)"
      ],
      [
        "state:",
        {
          "frozen": [
            "(_1.1: std::option::Option<std::boxed::Box<Node>>)"
          ],
          "blocked": []
        },
        "statement: FakeRead(ForLet(None), _3)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageLive(_4)"
      ]
    ],
    "state before terminator:",
    {
      "frozen": [],
      "blocked": []
    },
    "terminator: _4 = noop() -> [return: bb1, unwind: bb3]",
    {
      "bb1": [
        "state:",
        {
          "frozen": [],
          "blocked": []
        }
      ],
      "bb3": [
        "state:",
        {
          "frozen": [],
          "blocked": []
        }
      ]
    }
  ],
  "bb1": [
    [
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageDead(_4)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: _0 = const ()"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageDead(_3)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageDead(_2)"
      ]
    ],
    "state before terminator:",
    {
      "frozen": [],
      "blocked": []
    },
    "terminator: drop(_1) -> [return: bb2, unwind: bb4]",
    {
      "bb2": [
        "state:",
        {
          "frozen": [],
          "blocked": []
        }
      ],
      "bb4": [
        "state:",
        {
          "frozen": [],
          "blocked": []
        }
      ]
    }
  ],
  "bb2": [
    [],
    "state before terminator:",
    {
      "frozen": [],
      "blocked": []
    },
    "terminator: return",
    {}
  ],
  "bb3": [
    [],
    "state before terminator:",
    {
      "frozen": [],
      "blocked": []
    },
    "terminator: drop(_1) -> [return: bb4, unwind terminate(cleanup)]",
    {
      "bb4": [
        "state:",
        {
          "frozen": [],
          "blocked": []
        }
      ]
    }
  ],
  "bb4": [
    [],
    "state before terminator:",
    {
      "frozen": [],
      "blocked": []
    },
    "terminator: resume",
    {}
  ]
}
Result for function last_val_mut():
{
  "bb0": [
    [
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageLive(_2)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageLive(_3)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: _3 = move _1"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: FakeRead(ForLet(None), _3)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageLive(_4)"
      ]
    ],
    "state before terminator:",
    {
      "frozen": [],
      "blocked": []
    },
    "terminator: goto -> bb1",
    {
      "bb1": [
        "state:",
        {
          "frozen": [],
          "blocked": []
        }
      ]
    }
  ],
  "bb1": [
    [],
    "state before terminator:",
    {
      "frozen": [],
      "blocked": []
    },
    "terminator: falseUnwind -> [real: bb2, unwind: bb6]",
    {
      "bb2": [
        "state:",
        {
          "frozen": [],
          "blocked": []
        }
      ],
      "bb6": [
        "state:",
        {
          "frozen": [],
          "blocked": []
        }
      ]
    }
  ],
  "bb2": [
    [
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageLive(_6)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: _6 = &mut ((*_3).1: std::option::Option<std::boxed::Box<Node>>)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_3"
          ]
        },
        "statement: FakeRead(ForMatchedPlace(None), _6)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_3"
          ]
        },
        "statement: _7 = discriminant((*_6))"
      ]
    ],
    "state before terminator:",
    {
      "frozen": [],
      "blocked": [
        "_3"
      ]
    },
    "terminator: switchInt(move _7) -> [1: bb3, otherwise: bb5]",
    {
      "bb3": [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_3"
          ]
        }
      ],
      "bb5": [
        "state:",
        {
          "frozen": [],
          "blocked": []
        }
      ]
    }
  ],
  "bb3": [
    [],
    "state before terminator:",
    {
      "frozen": [],
      "blocked": [
        "_3"
      ]
    },
    "terminator: falseEdge -> [real: bb4, imaginary: bb5]",
    {
      "bb4": [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_3"
          ]
        }
      ],
      "bb5": [
        "state:",
        {
          "frozen": [],
          "blocked": []
        }
      ]
    }
  ],
  "bb4": [
    [
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_3"
          ]
        },
        "statement: StorageLive(_8)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_3"
          ]
        },
        "statement: _8 = &mut (*(((*_6) as Some).0: std::boxed::Box<Node>))"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_3",
            "_6"
          ]
        },
        "statement: StorageLive(_9)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_3",
            "_6"
          ]
        },
        "statement: _9 = &mut (*_8)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_3",
            "_6",
            "_8"
          ]
        },
        "statement: _3 = move _9"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_6",
            "_8"
          ]
        },
        "statement: StorageDead(_9)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_6",
            "_8"
          ]
        },
        "statement: _5 = const ()"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_6",
            "_8"
          ]
        },
        "statement: StorageDead(_8)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_6"
          ]
        },
        "statement: StorageDead(_6)"
      ]
    ],
    "state before terminator:",
    {
      "frozen": [],
      "blocked": []
    },
    "terminator: goto -> bb1",
    {
      "bb1": [
        "state:",
        {
          "frozen": [],
          "blocked": []
        }
      ]
    }
  ],
  "bb5": [
    [
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageLive(_11)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: _4 = const ()"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageDead(_11)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageDead(_6)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageDead(_4)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageLive(_13)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: _13 = &mut ((*_3).0: u32)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_3"
          ]
        },
        "statement: _2 = &mut (*_13)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_3",
            "_13"
          ]
        },
        "statement: StorageDead(_3)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_13"
          ]
        },
        "statement: _0 = &mut (*_2)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_2",
            "_13"
          ]
        },
        "statement: StorageDead(_13)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_2"
          ]
        },
        "statement: StorageDead(_2)"
      ]
    ],
    "state before terminator:",
    {
      "frozen": [],
      "blocked": []
    },
    "terminator: return",
    {}
  ],
  "bb6": [
    [],
    "state before terminator:",
    {
      "frozen": [],
      "blocked": []
    },
    "terminator: resume",
    {}
  ]
}
Result for function modify_last_val():
{
  "bb0": [
    [
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageLive(_2)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: _2 = &mut (*_1)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_1"
          ]
        },
        "statement: FakeRead(ForLet(None), _2)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_1"
          ]
        },
        "statement: StorageLive(_3)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_1"
          ]
        },
        "statement: StorageLive(_4)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_1"
          ]
        },
        "statement: _4 = &mut (*_2)"
      ]
    ],
    "state before terminator:",
    {
      "frozen": [],
      "blocked": [
        "_1",
        "_2"
      ]
    },
    "terminator: _3 = last_val_mut(move _4) -> [return: bb1, unwind: bb3]",
    {
      "bb1": [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_1",
            "_2"
          ]
        }
      ],
      "bb3": [
        "state:",
        {
          "frozen": [],
          "blocked": []
        }
      ]
    }
  ],
  "bb1": [
    [
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_1",
            "_2"
          ]
        },
        "statement: StorageDead(_4)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_1",
            "_2"
          ]
        },
        "statement: FakeRead(ForLet(None), _3)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": [
            "_1",
            "_2"
          ]
        },
        "statement: (*_3) = const 123_u32"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageLive(_5)"
      ]
    ],
    "state before terminator:",
    {
      "frozen": [],
      "blocked": []
    },
    "terminator: _5 = noop() -> [return: bb2, unwind: bb3]",
    {
      "bb2": [
        "state:",
        {
          "frozen": [],
          "blocked": []
        }
      ],
      "bb3": [
        "state:",
        {
          "frozen": [],
          "blocked": []
        }
      ]
    }
  ],
  "bb2": [
    [
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageDead(_5)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: _0 = const ()"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageDead(_3)"
      ],
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: StorageDead(_2)"
      ]
    ],
    "state before terminator:",
    {
      "frozen": [],
      "blocked": []
    },
    "terminator: return",
    {}
  ],
  "bb3": [
    [],
    "state before terminator:",
    {
      "frozen": [],
      "blocked": []
    },
    "terminator: resume",
    {}
  ]
}
Result for function noop():
{
  "bb0": [
    [
      [
        "state:",
        {
          "frozen": [],
          "blocked": []
        },
        "statement: _0 = const ()"
      ]
    ],
    "state before terminator:",
    {
      "frozen": [],
      "blocked": []
    },
    "terminator: return",
    {}
  ]
}
