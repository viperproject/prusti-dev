Analyzing file $DIR/rust_issue_63787.rs using FramingAnalysis...
Result for function break_it():
{
  "bb0": [
    [
      [
        "state:",
        {
          "frame_accessible": [
            "_1",
            "_2"
          ],
          "frame_owned": [
            "_1",
            "_2"
          ]
        },
        "statement: StorageLive(_3)"
      ],
      [
        "state:",
        {
          "frame_accessible": [
            "_1",
            "_2"
          ],
          "frame_owned": [
            "_1",
            "_2"
          ]
        },
        "statement: StorageLive(_4)"
      ],
      [
        "state:",
        {
          "frame_accessible": [
            "_1"
          ],
          "frame_owned": [
            "_1"
          ]
        },
        "statement: _4 = move _2"
      ]
    ],
    "state before terminator:",
    {
      "frame_accessible": [
        "_1"
      ],
      "frame_owned": [
        "_1"
      ]
    },
    "terminator: _3 = std::mem::drop::<std::cell::Ref<'_, i32>>(move _4) -> [return: bb1, unwind: bb7]",
    {
      "bb1": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ],
      "bb7": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ]
    }
  ],
  "bb1": [
    [
      [
        "state:",
        {
          "frame_accessible": [
            "_1",
            "_3"
          ],
          "frame_owned": [
            "_1",
            "_3"
          ]
        },
        "statement: StorageDead(_4)"
      ],
      [
        "state:",
        {
          "frame_accessible": [
            "_1",
            "_3"
          ],
          "frame_owned": [
            "_1",
            "_3"
          ]
        },
        "statement: StorageDead(_3)"
      ],
      [
        "state:",
        {
          "frame_accessible": [
            "_1"
          ],
          "frame_owned": [
            "_1"
          ]
        },
        "statement: StorageLive(_5)"
      ],
      [
        "state:",
        {
          "frame_accessible": [
            "_1"
          ],
          "frame_owned": [
            "_1"
          ]
        },
        "statement: StorageLive(_6)"
      ],
      [
        "state:",
        {
          "frame_accessible": [
            "_1"
          ],
          "frame_owned": [
            "_1"
          ]
        },
        "statement: StorageLive(_7)"
      ],
      [
        "state:",
        {
          "frame_accessible": [
            "_1"
          ],
          "frame_owned": [
            "_1"
          ]
        },
        "statement: StorageLive(_8)"
      ],
      [
        "state:",
        {
          "frame_accessible": [
            "_1"
          ],
          "frame_owned": []
        },
        "statement: _8 = &(*_1)"
      ]
    ],
    "state before terminator:",
    {
      "frame_accessible": [],
      "frame_owned": []
    },
    "terminator: _7 = std::cell::RefCell::<i32>::borrow_mut(move _8) -> [return: bb2, unwind: bb8]",
    {
      "bb2": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ],
      "bb8": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ]
    }
  ],
  "bb2": [
    [
      [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        },
        "statement: _6 = &mut _7"
      ],
      [
        "state:",
        {
          "frame_accessible": [
            "_6"
          ],
          "frame_owned": [
            "_6"
          ]
        },
        "statement: StorageDead(_8)"
      ]
    ],
    "state before terminator:",
    {
      "frame_accessible": [],
      "frame_owned": []
    },
    "terminator: _5 = <std::cell::RefMut<'_, i32> as std::ops::DerefMut>::deref_mut(move _6) -> [return: bb3, unwind: bb6]",
    {
      "bb3": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ],
      "bb6": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ]
    }
  ],
  "bb3": [
    [
      [
        "state:",
        {
          "frame_accessible": [
            "_5"
          ],
          "frame_owned": [
            "_5"
          ]
        },
        "statement: StorageDead(_6)"
      ],
      [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        },
        "statement: (*_5) = const 2_i32"
      ]
    ],
    "state before terminator:",
    {
      "frame_accessible": [],
      "frame_owned": []
    },
    "terminator: drop(_7) -> [return: bb4, unwind: bb8]",
    {
      "bb4": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ],
      "bb8": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ]
    }
  ],
  "bb4": [
    [
      [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        },
        "statement: StorageDead(_7)"
      ],
      [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        },
        "statement: StorageDead(_5)"
      ],
      [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        },
        "statement: _0 = const ()"
      ]
    ],
    "state before terminator:",
    {
      "frame_accessible": [
        "_0"
      ],
      "frame_owned": [
        "_0"
      ]
    },
    "terminator: drop(_2) -> [return: bb5, unwind: bb9]",
    {
      "bb5": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ],
      "bb9": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ]
    }
  ],
  "bb5": [
    [],
    "state before terminator:",
    {
      "frame_accessible": [
        "_0"
      ],
      "frame_owned": [
        "_0"
      ]
    },
    "terminator: return",
    {}
  ],
  "bb6": [
    [],
    "state before terminator:",
    {
      "frame_accessible": [],
      "frame_owned": []
    },
    "terminator: drop(_7) -> [return: bb8, unwind terminate]",
    {
      "bb8": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ]
    }
  ],
  "bb7": [
    [],
    "state before terminator:",
    {
      "frame_accessible": [],
      "frame_owned": []
    },
    "terminator: drop(_4) -> [return: bb8, unwind terminate]",
    {
      "bb8": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ]
    }
  ],
  "bb8": [
    [],
    "state before terminator:",
    {
      "frame_accessible": [],
      "frame_owned": []
    },
    "terminator: drop(_2) -> [return: bb9, unwind terminate]",
    {
      "bb9": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ]
    }
  ],
  "bb9": [
    [],
    "state before terminator:",
    {
      "frame_accessible": [],
      "frame_owned": []
    },
    "terminator: resume",
    {}
  ]
}
Result for function main():
{
  "bb0": [
    [
      [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        },
        "statement: StorageLive(_1)"
      ]
    ],
    "state before terminator:",
    {
      "frame_accessible": [],
      "frame_owned": []
    },
    "terminator: _1 = std::cell::RefCell::<i32>::new(const 0_i32) -> [return: bb1, unwind: bb5]",
    {
      "bb1": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ],
      "bb5": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ]
    }
  ],
  "bb1": [
    [
      [
        "state:",
        {
          "frame_accessible": [
            "_1"
          ],
          "frame_owned": []
        },
        "statement: FakeRead(ForLet(None), _1)"
      ],
      [
        "state:",
        {
          "frame_accessible": [
            "_1"
          ],
          "frame_owned": [
            "_1"
          ]
        },
        "statement: StorageLive(_2)"
      ],
      [
        "state:",
        {
          "frame_accessible": [
            "_1"
          ],
          "frame_owned": [
            "_1"
          ]
        },
        "statement: StorageLive(_3)"
      ],
      [
        "state:",
        {
          "frame_accessible": [
            "_1"
          ],
          "frame_owned": []
        },
        "statement: _3 = &_1"
      ],
      [
        "state:",
        {
          "frame_accessible": [
            "_1",
            "_3"
          ],
          "frame_owned": []
        },
        "statement: _2 = &(*_3)"
      ],
      [
        "state:",
        {
          "frame_accessible": [
            "_1",
            "_2"
          ],
          "frame_owned": [
            "_2"
          ]
        },
        "statement: StorageLive(_4)"
      ],
      [
        "state:",
        {
          "frame_accessible": [
            "_1",
            "_2"
          ],
          "frame_owned": [
            "_2"
          ]
        },
        "statement: StorageLive(_5)"
      ],
      [
        "state:",
        {
          "frame_accessible": [
            "_1",
            "_2"
          ],
          "frame_owned": [
            "_2"
          ]
        },
        "statement: _5 = &_1"
      ]
    ],
    "state before terminator:",
    {
      "frame_accessible": [
        "_1",
        "_2"
      ],
      "frame_owned": [
        "_2"
      ]
    },
    "terminator: _4 = std::cell::RefCell::<i32>::borrow(move _5) -> [return: bb2, unwind: bb5]",
    {
      "bb2": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ],
      "bb5": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ]
    }
  ],
  "bb2": [
    [
      [
        "state:",
        {
          "frame_accessible": [
            "_1",
            "_2",
            "_4"
          ],
          "frame_owned": [
            "_2",
            "_4"
          ]
        },
        "statement: StorageDead(_5)"
      ]
    ],
    "state before terminator:",
    {
      "frame_accessible": [
        "_1"
      ],
      "frame_owned": []
    },
    "terminator: _0 = break_it(move _2, move _4) -> [return: bb3, unwind: bb4]",
    {
      "bb3": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ],
      "bb4": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ]
    }
  ],
  "bb3": [
    [
      [
        "state:",
        {
          "frame_accessible": [
            "_0",
            "_1"
          ],
          "frame_owned": [
            "_0",
            "_1"
          ]
        },
        "statement: StorageDead(_4)"
      ],
      [
        "state:",
        {
          "frame_accessible": [
            "_0",
            "_1"
          ],
          "frame_owned": [
            "_0",
            "_1"
          ]
        },
        "statement: StorageDead(_2)"
      ],
      [
        "state:",
        {
          "frame_accessible": [
            "_0",
            "_1"
          ],
          "frame_owned": [
            "_0",
            "_1"
          ]
        },
        "statement: StorageDead(_1)"
      ],
      [
        "state:",
        {
          "frame_accessible": [
            "_0"
          ],
          "frame_owned": [
            "_0"
          ]
        },
        "statement: StorageDead(_3)"
      ]
    ],
    "state before terminator:",
    {
      "frame_accessible": [
        "_0"
      ],
      "frame_owned": [
        "_0"
      ]
    },
    "terminator: return",
    {}
  ],
  "bb4": [
    [],
    "state before terminator:",
    {
      "frame_accessible": [],
      "frame_owned": []
    },
    "terminator: drop(_4) -> [return: bb5, unwind terminate]",
    {
      "bb5": [
        "state:",
        {
          "frame_accessible": [],
          "frame_owned": []
        }
      ]
    }
  ],
  "bb5": [
    [],
    "state before terminator:",
    {
      "frame_accessible": [],
      "frame_owned": []
    },
    "terminator: resume",
    {}
  ]
}
